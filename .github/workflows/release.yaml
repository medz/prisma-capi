name: Release
on: push
env:
  CARGO_TERM_COLOR: always
jobs:
  # Build C API [api.h] file
  build-c-api:
    name: build (C-API)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-c-api-${{ hashFiles('**/Cargo.lock') }}
      - name: Build C header file
        run: |
          cargo install cbindgen
          cbindgen --config cbindgen.toml --output api.h
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: api.h
  # Build libraries
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rustup_target: x86_64-unknown-linux-gnu
            artifact_name: linux-x86_64.so
            local_filename: libprisma_query_engine_c_api.so
          - os: ubuntu-latest
            rustup_target: aarch64-unknown-linux-gnu
            artifact_name: linux-aarch64.so
            local_filename: libprisma_query_engine_c_api.so
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.rustup_target }}-${{ hashFiles('**/Cargo.lock') }}

      - if: matrix.rustup_target == 'aarch64-unknown-linux-gnu'
        run: sudo apt install gcc-multilib

      - name: Build library
        run: |
          rustup target add ${{ matrix.rustup_target }} --toolchain stable
          cargo build --release --target ${{ matrix.rustup_target }} --verbose

      - name: Overwrite artifacts
        run: |
          rm -f ${{ matrix.artifact_name }}
          cp target/${{ matrix.rustup_target }}/release/${{ matrix.local_filename }} ${{ matrix.artifact_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: ${{ matrix.artifact_name }}
  # Deploy libraries
  deploy:
    needs: 
      - build-c-api
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      - name: Upload artifacts to GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.h
            *.a
            *.dll
            *.dylib
            *.so
          tag_name: v0.1.0 
